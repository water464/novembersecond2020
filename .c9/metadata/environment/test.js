{"filter":false,"title":"test.js","tooltip":"/test.js","undoManager":{"mark":96,"position":96,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["l"],"id":1},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["e"]},{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["t"]}],[{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":[" "],"id":2},{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"insert","lines":["n"]},{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"insert","lines":["a"]},{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":["m"]},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["e"]}],[{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":[" "],"id":3},{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":["_"]}],[{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"remove","lines":["_"],"id":4}],[{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":["+"],"id":5}],[{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"remove","lines":["+"],"id":6}],[{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":["="],"id":7}],[{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":[" "],"id":8},{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"insert","lines":["\""]}],[{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"remove","lines":["\""],"id":9}],[{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"insert","lines":["'"],"id":10}],[{"start":{"row":0,"column":12},"end":{"row":0,"column":14},"action":"insert","lines":["太郎"],"id":11},{"start":{"row":0,"column":14},"end":{"row":0,"column":16},"action":"insert","lines":["さん"]}],[{"start":{"row":0,"column":16},"end":{"row":0,"column":17},"action":"insert","lines":["'"],"id":12},{"start":{"row":0,"column":17},"end":{"row":0,"column":18},"action":"insert","lines":[";"]}],[{"start":{"row":0,"column":18},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":13},{"start":{"row":1,"column":0},"end":{"row":1,"column":1},"action":"insert","lines":["c"]},{"start":{"row":1,"column":1},"end":{"row":1,"column":2},"action":"insert","lines":["o"]},{"start":{"row":1,"column":2},"end":{"row":1,"column":3},"action":"insert","lines":["n"]},{"start":{"row":1,"column":3},"end":{"row":1,"column":4},"action":"insert","lines":["s"]},{"start":{"row":1,"column":4},"end":{"row":1,"column":5},"action":"insert","lines":["o"]},{"start":{"row":1,"column":5},"end":{"row":1,"column":6},"action":"insert","lines":["l"]},{"start":{"row":1,"column":6},"end":{"row":1,"column":7},"action":"insert","lines":["e"]}],[{"start":{"row":1,"column":7},"end":{"row":1,"column":8},"action":"insert","lines":["."],"id":14},{"start":{"row":1,"column":8},"end":{"row":1,"column":9},"action":"insert","lines":["l"]},{"start":{"row":1,"column":9},"end":{"row":1,"column":10},"action":"insert","lines":["o"]},{"start":{"row":1,"column":10},"end":{"row":1,"column":11},"action":"insert","lines":["g"]}],[{"start":{"row":1,"column":11},"end":{"row":1,"column":12},"action":"insert","lines":["("],"id":15},{"start":{"row":1,"column":12},"end":{"row":1,"column":13},"action":"insert","lines":["n"]},{"start":{"row":1,"column":13},"end":{"row":1,"column":14},"action":"insert","lines":["a"]},{"start":{"row":1,"column":14},"end":{"row":1,"column":15},"action":"insert","lines":["m"]},{"start":{"row":1,"column":15},"end":{"row":1,"column":16},"action":"insert","lines":["e"]},{"start":{"row":1,"column":16},"end":{"row":1,"column":17},"action":"insert","lines":[")"]}],[{"start":{"row":1,"column":17},"end":{"row":1,"column":18},"action":"insert","lines":[";"],"id":16}],[{"start":{"row":1,"column":18},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":17},{"start":{"row":2,"column":0},"end":{"row":2,"column":1},"action":"insert","lines":["c"]},{"start":{"row":2,"column":1},"end":{"row":2,"column":2},"action":"insert","lines":["o"]}],[{"start":{"row":2,"column":2},"end":{"row":2,"column":3},"action":"insert","lines":["n"],"id":18},{"start":{"row":2,"column":3},"end":{"row":2,"column":4},"action":"insert","lines":["s"]},{"start":{"row":2,"column":4},"end":{"row":2,"column":5},"action":"insert","lines":["o"]},{"start":{"row":2,"column":5},"end":{"row":2,"column":6},"action":"insert","lines":["l"]},{"start":{"row":2,"column":6},"end":{"row":2,"column":7},"action":"insert","lines":["e"]},{"start":{"row":2,"column":7},"end":{"row":2,"column":8},"action":"insert","lines":["."]}],[{"start":{"row":2,"column":8},"end":{"row":2,"column":9},"action":"insert","lines":["l"],"id":19},{"start":{"row":2,"column":9},"end":{"row":2,"column":10},"action":"insert","lines":["o"]},{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"insert","lines":["g"]},{"start":{"row":2,"column":11},"end":{"row":2,"column":12},"action":"insert","lines":["("]},{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"insert","lines":["n"]}],[{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"insert","lines":["a"],"id":20},{"start":{"row":2,"column":14},"end":{"row":2,"column":15},"action":"insert","lines":["m"]},{"start":{"row":2,"column":15},"end":{"row":2,"column":16},"action":"insert","lines":["e"]},{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"insert","lines":[")"]}],[{"start":{"row":2,"column":17},"end":{"row":2,"column":18},"action":"insert","lines":[";"],"id":21}],[{"start":{"row":2,"column":18},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":22}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":23},{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":5,"column":0},"end":{"row":9,"column":18},"action":"insert","lines":["let name = '太郎さん';","console.log(name);","","name = '花子さん';","console.log(name);"],"id":24}],[{"start":{"row":9,"column":18},"end":{"row":10,"column":0},"action":"insert","lines":["",""],"id":25},{"start":{"row":10,"column":0},"end":{"row":11,"column":0},"action":"insert","lines":["",""]},{"start":{"row":11,"column":0},"end":{"row":12,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":12,"column":0},"end":{"row":14,"column":18},"action":"insert","lines":["const name = '太郎さん';","console.log(name);","console.log(name);"],"id":26}],[{"start":{"row":14,"column":18},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":27},{"start":{"row":15,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["",""]},{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":17,"column":0},"end":{"row":24,"column":36},"action":"insert","lines":["function suido() { // 関数を定義する","  return '水'; // 戻り値を返す（水が出てくる）","}","","const cup = suido(); // 関数を呼び出す（蛇口を開ける）して、cup変数に代入する","","console.log(cup); // 変数の値をコンソールに表示する","console.log(cup); // 変数の値をコンソールに表示する"],"id":28}],[{"start":{"row":24,"column":36},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":29},{"start":{"row":25,"column":0},"end":{"row":26,"column":0},"action":"insert","lines":["",""]},{"start":{"row":26,"column":0},"end":{"row":27,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":27,"column":0},"end":{"row":32,"column":46},"action":"insert","lines":["function findSquareArea(length) { // 関数を定義する","  return length * length; // 引数を２乗した値を、戻り値として返す","}","","const result = findSquareArea(5); // 戻り値をresult変数に代入する","console.log(result); // result変数の値を、コンソールに表示する"],"id":30}],[{"start":{"row":32,"column":46},"end":{"row":33,"column":0},"action":"insert","lines":["",""],"id":31},{"start":{"row":33,"column":0},"end":{"row":34,"column":0},"action":"insert","lines":["",""]},{"start":{"row":34,"column":0},"end":{"row":35,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":35,"column":0},"end":{"row":43,"column":46},"action":"insert","lines":["上記の関数は、以下のように書くこともできます。","","function findSquareArea(length) { // 関数を定義する","  const area = length * length; // 引数を２乗した値を、area変数に代入する","  return area; //area変数の値を、戻り値として返す","}","","const result = findSquareArea(5); // 戻り値をresult変数に代入する","console.log(result); // result変数の値を、コンソールに表示する"],"id":32}],[{"start":{"row":35,"column":0},"end":{"row":35,"column":1},"action":"insert","lines":["/"],"id":33},{"start":{"row":35,"column":1},"end":{"row":35,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":43,"column":46},"end":{"row":44,"column":0},"action":"insert","lines":["",""],"id":34},{"start":{"row":44,"column":0},"end":{"row":45,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":45,"column":0},"end":{"row":51,"column":46},"action":"insert","lines":["function add(x, y) { // 関数を定義する","  const sum = x + y; // 引数を足し算した値を、sum変数に代入する","  return sum; // sum変数の値を、戻り値として返す","}","","const result = add(2, 3); // 戻り値をresult変数に代入する","console.log(result); // result変数の値を、コンソールに表示する"],"id":35}],[{"start":{"row":44,"column":0},"end":{"row":45,"column":0},"action":"insert","lines":["",""],"id":36},{"start":{"row":45,"column":0},"end":{"row":46,"column":0},"action":"insert","lines":["",""]},{"start":{"row":46,"column":0},"end":{"row":46,"column":1},"action":"insert","lines":["/"]},{"start":{"row":46,"column":1},"end":{"row":46,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":46,"column":2},"end":{"row":46,"column":32},"action":"insert","lines":["次は、引数を２つ使った例です。2つの値を足し算する関数です。"],"id":37}],[{"start":{"row":26,"column":0},"end":{"row":26,"column":1},"action":"insert","lines":["/"],"id":38},{"start":{"row":26,"column":1},"end":{"row":26,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":26,"column":2},"end":{"row":26,"column":43},"action":"insert","lines":["次に、引数と戻り値の両方を使った例を見てみましょう。正方形の面積を求める関数です。"],"id":39}],[{"start":{"row":16,"column":0},"end":{"row":16,"column":1},"action":"insert","lines":["/"],"id":40},{"start":{"row":16,"column":1},"end":{"row":16,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":16,"column":2},"end":{"row":16,"column":95},"action":"insert","lines":["関数の戻り値は、変数などの値として代入できます。先ほどの suido という関数の戻り値を、cup（コップ）という変数に代入してみましょう。そしてその変���の値を、���ンソールに表示します。"],"id":41}],[{"start":{"row":16,"column":1},"end":{"row":16,"column":2},"action":"remove","lines":["/"],"id":42}],[{"start":{"row":16,"column":1},"end":{"row":16,"column":2},"action":"insert","lines":["*"],"id":43}],[{"start":{"row":16,"column":48},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":44}],[{"start":{"row":17,"column":47},"end":{"row":17,"column":48},"action":"insert","lines":["*"],"id":45},{"start":{"row":17,"column":48},"end":{"row":17,"column":49},"action":"insert","lines":["/"]}],[{"start":{"row":54,"column":46},"end":{"row":55,"column":0},"action":"insert","lines":["",""],"id":46},{"start":{"row":55,"column":0},"end":{"row":56,"column":0},"action":"insert","lines":["",""]},{"start":{"row":56,"column":0},"end":{"row":57,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":57,"column":0},"end":{"row":74,"column":20},"action":"insert","lines":["たとえば、先ほど以下のコードを書きました。","","function add(x, y) { // 関数を定義する","  const sum = x + y; // 引数を足し算した値を、sum変数に代入する","  return sum; // sum変数の値を、戻り値として返す","}","","const result = add(2, 3); // 戻り値をresult変数に代入する","console.log(result); // result変数の値を、コンソールに表示する","上記のコードは、無名関数を使って以下のように書き換えることができます。定義した無名関数を変数に代入して、呼び出しています。(この例では分かりませんが、厳密には少し違いがあります。)","","const add = function (x, y) { // 無名関数を定義して、変数に代入する","  const sum = x + y;","  return sum;","}","","const result = add(2, 3);","console.log(result);"],"id":47}],[{"start":{"row":57,"column":0},"end":{"row":57,"column":1},"action":"insert","lines":["/"],"id":48},{"start":{"row":57,"column":1},"end":{"row":57,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":66,"column":0},"end":{"row":66,"column":1},"action":"insert","lines":["/"],"id":49},{"start":{"row":66,"column":1},"end":{"row":66,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":56,"column":0},"end":{"row":56,"column":1},"action":"insert","lines":["/"],"id":50},{"start":{"row":56,"column":1},"end":{"row":56,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":56,"column":2},"end":{"row":56,"column":4},"action":"insert","lines":["無名"],"id":51},{"start":{"row":56,"column":4},"end":{"row":56,"column":6},"action":"insert","lines":["関数"]}],[{"start":{"row":74,"column":20},"end":{"row":75,"column":0},"action":"insert","lines":["",""],"id":52},{"start":{"row":75,"column":0},"end":{"row":76,"column":0},"action":"insert","lines":["",""]},{"start":{"row":76,"column":0},"end":{"row":77,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":77,"column":0},"end":{"row":87,"column":0},"action":"insert","lines":["プロパティの値を取得する","プロパティの値を取得する方法はいくつかあります。１つは、「オブジェクトの変数名.プロパティ」と書く方法です。","","たとえば以下のコードでは person.name で、nameプロパティの値を取得しています。この書き方を「ドット記法」と呼びます。","","const person = {","  name: '桃太郎',","  age: 7,","};","console.log(person.name); // コンソールに「桃太郎」と表示される",""],"id":53}],[{"start":{"row":77,"column":0},"end":{"row":77,"column":1},"action":"insert","lines":["/"],"id":54},{"start":{"row":77,"column":1},"end":{"row":77,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":78,"column":0},"end":{"row":78,"column":1},"action":"insert","lines":["/"],"id":55},{"start":{"row":78,"column":1},"end":{"row":78,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":80,"column":0},"end":{"row":80,"column":1},"action":"insert","lines":["/"],"id":56},{"start":{"row":80,"column":1},"end":{"row":80,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":87,"column":0},"end":{"row":88,"column":0},"action":"insert","lines":["",""],"id":57},{"start":{"row":88,"column":0},"end":{"row":89,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":88,"column":0},"end":{"row":94,"column":49},"action":"insert","lines":["２つ目は、「オブジェクトの変数名[プロパティ名の文字列]」と書く方法です。たとえば person['name'] でも、nameプロパティの値を取得できます。この書き方を「ブラケット記法」と呼びます。","","const person = {","  name: '桃太郎',","  age: 7,","};","console.log(person['name']); // コンソールに「桃太郎」と表示される"],"id":58}],[{"start":{"row":88,"column":0},"end":{"row":88,"column":1},"action":"insert","lines":["/"],"id":59},{"start":{"row":88,"column":1},"end":{"row":88,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":95,"column":0},"end":{"row":96,"column":0},"action":"insert","lines":["",""],"id":60},{"start":{"row":96,"column":0},"end":{"row":97,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":97,"column":0},"end":{"row":99,"column":29},"action":"insert","lines":["上記ではkeyという変数に、'name' という文字列を代入しています。そのため person[key] は、personオブジェクトのnameプロパティにアクセスしています。このようにプロパティ名を変数に代入することで、取得するプロパティの値をJavaScriptで動的に変更できます。","","「動的に変更する」というのは、たとえば以下のような例です。"],"id":61}],[{"start":{"row":97,"column":0},"end":{"row":97,"column":1},"action":"insert","lines":["/"],"id":62}],[{"start":{"row":97,"column":1},"end":{"row":97,"column":2},"action":"insert","lines":["*"],"id":63}],[{"start":{"row":97,"column":38},"end":{"row":98,"column":0},"action":"insert","lines":["",""],"id":64}],[{"start":{"row":98,"column":52},"end":{"row":99,"column":0},"action":"insert","lines":["",""],"id":65}],[{"start":{"row":101,"column":29},"end":{"row":101,"column":30},"action":"insert","lines":["*"],"id":66},{"start":{"row":101,"column":30},"end":{"row":101,"column":31},"action":"insert","lines":["/"]}],[{"start":{"row":101,"column":31},"end":{"row":102,"column":0},"action":"insert","lines":["",""],"id":67},{"start":{"row":102,"column":0},"end":{"row":103,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":103,"column":0},"end":{"row":112,"column":44},"action":"insert","lines":["const person = {","  name: '桃太郎',","  age: 7,","};","","let key = 'name';","console.log(person[key]); // コンソールに「桃太郎」と表示される","","key = 'age';","console.log(person[key]); // コンソールに「7」と表示される"],"id":68}],[{"start":{"row":112,"column":44},"end":{"row":113,"column":0},"action":"insert","lines":["",""],"id":69},{"start":{"row":113,"column":0},"end":{"row":114,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":114,"column":0},"end":{"row":114,"column":1},"action":"insert","lines":["/"],"id":70}],[{"start":{"row":114,"column":1},"end":{"row":114,"column":2},"action":"insert","lines":["*"],"id":71}],[{"start":{"row":114,"column":2},"end":{"row":116,"column":117},"action":"insert","lines":["上記ではpersonオブジェクトに対して、keyという変数をプロパティ名として２回アクセスしています。key変数の値を途中で変更しているため、取得するプロパティの値も途中で変更されています。プロパティ名を変数に代入することで、取得するプロパティの値をプログラムの実行結果���������ーザーの入力などによって変更できます。これが、動的に変更するという意味です。","","一方、ドット記法では変数などを使ってプロパティにアクセスできません。そのため以下のように書いても、プロパティにアクセスできず「undefined」と表示されます。undefined は、「値が定義（設定）されていない」という意味です。"],"id":72}],[{"start":{"row":114,"column":53},"end":{"row":115,"column":0},"action":"insert","lines":["",""],"id":73}],[{"start":{"row":115,"column":44},"end":{"row":116,"column":0},"action":"insert","lines":["",""],"id":74}],[{"start":{"row":116,"column":41},"end":{"row":117,"column":0},"action":"insert","lines":["",""],"id":75}],[{"start":{"row":119,"column":34},"end":{"row":120,"column":0},"action":"insert","lines":["",""],"id":76}],[{"start":{"row":120,"column":47},"end":{"row":121,"column":0},"action":"insert","lines":["",""],"id":77}],[{"start":{"row":121,"column":36},"end":{"row":121,"column":37},"action":"insert","lines":["*"],"id":78},{"start":{"row":121,"column":37},"end":{"row":121,"column":38},"action":"insert","lines":[","]}],[{"start":{"row":121,"column":37},"end":{"row":121,"column":38},"action":"remove","lines":[","],"id":79}],[{"start":{"row":121,"column":37},"end":{"row":121,"column":38},"action":"insert","lines":["/"],"id":80}],[{"start":{"row":121,"column":38},"end":{"row":122,"column":0},"action":"insert","lines":["",""],"id":81},{"start":{"row":122,"column":0},"end":{"row":123,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":123,"column":0},"end":{"row":129,"column":56},"action":"insert","lines":["const person = {","  name: '桃太郎',","  age: 7,","};","","const nickname = 'name';","console.log(person.nickname); // コンソールに「undefined」と表示される"],"id":82}],[{"start":{"row":129,"column":56},"end":{"row":130,"column":0},"action":"insert","lines":["",""],"id":83},{"start":{"row":130,"column":0},"end":{"row":131,"column":0},"action":"insert","lines":["",""]},{"start":{"row":131,"column":0},"end":{"row":131,"column":1},"action":"insert","lines":["/"]}],[{"start":{"row":131,"column":1},"end":{"row":131,"column":2},"action":"insert","lines":["*"],"id":84},{"start":{"row":131,"column":2},"end":{"row":131,"column":3},"action":"insert","lines":["V"]}],[{"start":{"row":131,"column":2},"end":{"row":131,"column":3},"action":"remove","lines":["V"],"id":85}],[{"start":{"row":131,"column":2},"end":{"row":131,"column":132},"action":"insert","lines":["通常の関数と同じく、引数や戻り値も設定できます。またオブジェクトのメソッドからプロパティにアクセスするときは、頭に this. を付けます。以下のコードでintroduceメソッドの中からnameプロパティに�����クセス���たいとき������this.nameとなります。"],"id":86}],[{"start":{"row":131,"column":26},"end":{"row":132,"column":0},"action":"insert","lines":["",""],"id":87}],[{"start":{"row":132,"column":31},"end":{"row":133,"column":0},"action":"insert","lines":["",""],"id":88}],[{"start":{"row":133,"column":60},"end":{"row":134,"column":0},"action":"insert","lines":["",""],"id":89}],[{"start":{"row":134,"column":15},"end":{"row":134,"column":16},"action":"insert","lines":["*"],"id":90},{"start":{"row":134,"column":16},"end":{"row":134,"column":17},"action":"insert","lines":["/"]}],[{"start":{"row":134,"column":17},"end":{"row":135,"column":0},"action":"insert","lines":["",""],"id":91},{"start":{"row":135,"column":0},"end":{"row":136,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":136,"column":0},"end":{"row":149,"column":49},"action":"insert","lines":["const person = {","  name: '桃太郎',","  greet: function(friend) {","    console.log(`${friend}さん、こんにちは！`);","  },","  introduce: function() {","    console.log(`${this.name}と呼んでください！`);","  },","};","","person.greet('イヌ'); // コンソールに「イヌさん、こんにちは！」と表示される","person.greet('サル'); // コンソールに「サルさん、こんにちは！」と表示される","","person.introduce(); // コンソールに「桃太郎と呼んでください！」と表示される"],"id":92}],[{"start":{"row":149,"column":49},"end":{"row":150,"column":0},"action":"insert","lines":["",""],"id":93},{"start":{"row":150,"column":0},"end":{"row":151,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":151,"column":0},"end":{"row":166,"column":19},"action":"insert","lines":["先ほど説明したように、メソッドは短く省略して書くこともできます。上記のコードは、以下のように書き換えられます。","","const person = {","  name: '桃太郎',","  greet(friend) {","    console.log(`${friend}さん、こんにちは！`);","  },","  introduce() {","    console.log(`${this.name}と呼んでください！`);","  },","};","","person.greet('イヌ');","person.greet('サル');","","person.introduce();"],"id":94}],[{"start":{"row":151,"column":0},"end":{"row":151,"column":1},"action":"insert","lines":["/"],"id":95},{"start":{"row":151,"column":1},"end":{"row":151,"column":2},"action":"insert","lines":["*"]}],[{"start":{"row":151,"column":34},"end":{"row":152,"column":0},"action":"insert","lines":["",""],"id":96}],[{"start":{"row":152,"column":23},"end":{"row":152,"column":24},"action":"insert","lines":["*"],"id":97},{"start":{"row":152,"column":24},"end":{"row":152,"column":25},"action":"insert","lines":["/"]}]]},"ace":{"folds":[],"scrolltop":1860,"scrollleft":0,"selection":{"start":{"row":167,"column":19},"end":{"row":167,"column":19},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":123,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1579189404316,"hash":"9877fb8f10b84d2eb22fed0db72e45a0bbd98e19"}